# Makefile - For Linux and MacOS

OBJS  = ./deps/cimgui/cimgui.o
OBJS += ./deps/cimgui/cimgui_impl.o
OBJS += ./deps/cimgui/imgui/imgui.o
OBJS += ./deps/cimgui/imgui/imgui_draw.o
OBJS += ./deps/cimgui/imgui/imgui_demo.o
OBJS += ./deps/cimgui/imgui/imgui_tables.o
OBJS += ./deps/cimgui/imgui/imgui_widgets.o
OBJS += ./deps/cimgui/imgui/backends/imgui_impl_vulkan.o
OBJS += ./deps/cimgui/imgui/backends/imgui_impl_sdl2.o

CXXFLAGS  =-O2 -fno-exceptions -fno-rtti -Wall
CXXFLAGS += -I./deps/cimgui/imgui/
CXXFLAGS += -I./deps/cimgui/imgui/backends/
UNAME_S := $(shell uname -s)

ifeq ($(UNAME_S), Linux) #LINUX
	ECHO_MESSAGE = "Linux"

	OUTPUTNAME = libcimgui.so
	CXXFLAGS += -I./deps/SDL2/include -I./deps/cimgui/imgui
	CXXFLAGS += -fno-threadsafe-statics
	CXXFLAGS += -DCIMGUI_USE_SDL2 -DCIMGUI_USE_VULKAN -DIMGUI_DISABLE_OBSOLETE_FUNCTIONS=1 -DIMGUI_IMPL_API="extern \"C\" "
	CXXFLAGS += -fPIC
	CFLAGS = $(CXXFLAGS)
endif

ifeq ($(UNAME_S), Darwin) #APPLE
	ECHO_MESSAGE = "macOS"

	OUTPUTNAME = cimgui.dylib
	CXXFLAGS += -I/usr/local/include
	LINKFLAGS = -dynamiclib
	CFLAGS = $(CXXFLAGS)
endif

NDK = /home/rqdt9/Android/Sdk/ndk/27.2.12479018/toolchains/llvm/prebuilt/linux-x86_64

#/sysroot/usr/lib/aarch64-linux-android/24/

.cpp.o:
	$(NDK)/bin/aarch64-linux-android24-clang++ -DCIMGUI_USE_SDL2 -DCIMGUI_USE_VULKAN -DIMGUI_DISABLE_OBSOLETE_FUNCTIONS=1 -DIMGUI_DISABLE_FILE_FUNCTIONS -DIMGUI_IMPL_API="extern \"C\" " -fPIC -DSDL_VIDEO_DRIVER_ANDROID -I./deps/cimgui/imgui/backends/ -I./deps/SDL2/include -I./deps/cimgui/imgui -c -o $@ $<

all:$(OUTPUTNAME)
	@echo Build complete for $(ECHO_MESSAGE)

$(OUTPUTNAME):$(OBJS)
	$(NDK)/bin/ld -EL --fix-cortex-a53-843419 --warn-shared-textrel -z now -z relro -z max-page-size=4096 --hash-style=gnu --hash-style=both -L/home/rqdt9/Github/DImGui -L/home/rqdt9/Software/ldc2-1.40.1-linux-x86_64/lib-android-aarch64  -L$(NDK)/sysroot/usr/lib/aarch64-linux-android/24/ -L$(NDK)/sysroot/usr/lib/aarch64-linux-android/ -L./deps/sdl_aarch64/ -L$(NDK)/bin/../sysroot/usr/lib --eh-frame-hdr -m aarch64linux -shared -o ./app/src/main/jniLibs/arm64-v8a/libCIMG.so $(OBJS) $(NDK)/lib/clang/18/lib/linux/libclang_rt.builtins-aarch64-android.a $(NDK)/sysroot/usr/lib/aarch64-linux-android/24/libc++.a -lSDL2 -ldl -lm -lvulkan -lc  $(NDK)/sysroot/usr/lib/aarch64-linux-android/24/crtend_so.o

clean:
	rm -f $(OBJS)

fclean: clean
	rm -f $(OUTPUTNAME)

re: fclean all

.PHONY: all clean fclean re static
